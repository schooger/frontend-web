/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const MetaverseLazyImport = createFileRoute('/metaverse')()
const ComingSoonLazyImport = createFileRoute('/coming-soon')()
const IndexLazyImport = createFileRoute('/')()
const TeachersIndexLazyImport = createFileRoute('/teachers/')()
const StudentsIndexLazyImport = createFileRoute('/students/')()
const LevelsIndexLazyImport = createFileRoute('/levels/')()
const ClassesIndexLazyImport = createFileRoute('/classes/')()
const TeachersTeacheridIndexLazyImport = createFileRoute(
  '/teachers/$teacher_id/',
)()
const StudentsStudentidIndexLazyImport = createFileRoute(
  '/students/$student_id/',
)()
const LevelsPlanetnameIndexLazyImport = createFileRoute(
  '/levels/$planet_name/',
)()
const ClassesClassidIndexLazyImport = createFileRoute('/classes/$class_id/')()
const ClassesClassidTeachersLazyImport = createFileRoute(
  '/classes/$class_id/teachers',
)()
const ClassesClassidStudentsLazyImport = createFileRoute(
  '/classes/$class_id/students',
)()

// Create/Update Routes

const MetaverseLazyRoute = MetaverseLazyImport.update({
  id: '/metaverse',
  path: '/metaverse',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/metaverse.lazy').then((d) => d.Route))

const ComingSoonLazyRoute = ComingSoonLazyImport.update({
  id: '/coming-soon',
  path: '/coming-soon',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/coming-soon.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const TeachersIndexLazyRoute = TeachersIndexLazyImport.update({
  id: '/teachers/',
  path: '/teachers/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/teachers/index.lazy').then((d) => d.Route),
)

const StudentsIndexLazyRoute = StudentsIndexLazyImport.update({
  id: '/students/',
  path: '/students/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/students/index.lazy').then((d) => d.Route),
)

const LevelsIndexLazyRoute = LevelsIndexLazyImport.update({
  id: '/levels/',
  path: '/levels/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/levels/index.lazy').then((d) => d.Route))

const ClassesIndexLazyRoute = ClassesIndexLazyImport.update({
  id: '/classes/',
  path: '/classes/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/classes/index.lazy').then((d) => d.Route))

const TeachersTeacheridIndexLazyRoute = TeachersTeacheridIndexLazyImport.update(
  {
    id: '/teachers/$teacher_id/',
    path: '/teachers/$teacher_id/',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/teachers/$teacher_id/index.lazy').then((d) => d.Route),
)

const StudentsStudentidIndexLazyRoute = StudentsStudentidIndexLazyImport.update(
  {
    id: '/students/$student_id/',
    path: '/students/$student_id/',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/students/$student_id/index.lazy').then((d) => d.Route),
)

const LevelsPlanetnameIndexLazyRoute = LevelsPlanetnameIndexLazyImport.update({
  id: '/levels/$planet_name/',
  path: '/levels/$planet_name/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/levels/$planet_name/index.lazy').then((d) => d.Route),
)

const ClassesClassidIndexLazyRoute = ClassesClassidIndexLazyImport.update({
  id: '/classes/$class_id/',
  path: '/classes/$class_id/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/classes/$class_id/index.lazy').then((d) => d.Route),
)

const ClassesClassidTeachersLazyRoute = ClassesClassidTeachersLazyImport.update(
  {
    id: '/classes/$class_id/teachers',
    path: '/classes/$class_id/teachers',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/classes/$class_id/teachers.lazy').then((d) => d.Route),
)

const ClassesClassidStudentsLazyRoute = ClassesClassidStudentsLazyImport.update(
  {
    id: '/classes/$class_id/students',
    path: '/classes/$class_id/students',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/classes/$class_id/students.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/coming-soon': {
      id: '/coming-soon'
      path: '/coming-soon'
      fullPath: '/coming-soon'
      preLoaderRoute: typeof ComingSoonLazyImport
      parentRoute: typeof rootRoute
    }
    '/metaverse': {
      id: '/metaverse'
      path: '/metaverse'
      fullPath: '/metaverse'
      preLoaderRoute: typeof MetaverseLazyImport
      parentRoute: typeof rootRoute
    }
    '/classes/': {
      id: '/classes/'
      path: '/classes'
      fullPath: '/classes'
      preLoaderRoute: typeof ClassesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/levels/': {
      id: '/levels/'
      path: '/levels'
      fullPath: '/levels'
      preLoaderRoute: typeof LevelsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/students/': {
      id: '/students/'
      path: '/students'
      fullPath: '/students'
      preLoaderRoute: typeof StudentsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/teachers/': {
      id: '/teachers/'
      path: '/teachers'
      fullPath: '/teachers'
      preLoaderRoute: typeof TeachersIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/classes/$class_id/students': {
      id: '/classes/$class_id/students'
      path: '/classes/$class_id/students'
      fullPath: '/classes/$class_id/students'
      preLoaderRoute: typeof ClassesClassidStudentsLazyImport
      parentRoute: typeof rootRoute
    }
    '/classes/$class_id/teachers': {
      id: '/classes/$class_id/teachers'
      path: '/classes/$class_id/teachers'
      fullPath: '/classes/$class_id/teachers'
      preLoaderRoute: typeof ClassesClassidTeachersLazyImport
      parentRoute: typeof rootRoute
    }
    '/classes/$class_id/': {
      id: '/classes/$class_id/'
      path: '/classes/$class_id'
      fullPath: '/classes/$class_id'
      preLoaderRoute: typeof ClassesClassidIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/levels/$planet_name/': {
      id: '/levels/$planet_name/'
      path: '/levels/$planet_name'
      fullPath: '/levels/$planet_name'
      preLoaderRoute: typeof LevelsPlanetnameIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/students/$student_id/': {
      id: '/students/$student_id/'
      path: '/students/$student_id'
      fullPath: '/students/$student_id'
      preLoaderRoute: typeof StudentsStudentidIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/teachers/$teacher_id/': {
      id: '/teachers/$teacher_id/'
      path: '/teachers/$teacher_id'
      fullPath: '/teachers/$teacher_id'
      preLoaderRoute: typeof TeachersTeacheridIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/coming-soon': typeof ComingSoonLazyRoute
  '/metaverse': typeof MetaverseLazyRoute
  '/classes': typeof ClassesIndexLazyRoute
  '/levels': typeof LevelsIndexLazyRoute
  '/students': typeof StudentsIndexLazyRoute
  '/teachers': typeof TeachersIndexLazyRoute
  '/classes/$class_id/students': typeof ClassesClassidStudentsLazyRoute
  '/classes/$class_id/teachers': typeof ClassesClassidTeachersLazyRoute
  '/classes/$class_id': typeof ClassesClassidIndexLazyRoute
  '/levels/$planet_name': typeof LevelsPlanetnameIndexLazyRoute
  '/students/$student_id': typeof StudentsStudentidIndexLazyRoute
  '/teachers/$teacher_id': typeof TeachersTeacheridIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/coming-soon': typeof ComingSoonLazyRoute
  '/metaverse': typeof MetaverseLazyRoute
  '/classes': typeof ClassesIndexLazyRoute
  '/levels': typeof LevelsIndexLazyRoute
  '/students': typeof StudentsIndexLazyRoute
  '/teachers': typeof TeachersIndexLazyRoute
  '/classes/$class_id/students': typeof ClassesClassidStudentsLazyRoute
  '/classes/$class_id/teachers': typeof ClassesClassidTeachersLazyRoute
  '/classes/$class_id': typeof ClassesClassidIndexLazyRoute
  '/levels/$planet_name': typeof LevelsPlanetnameIndexLazyRoute
  '/students/$student_id': typeof StudentsStudentidIndexLazyRoute
  '/teachers/$teacher_id': typeof TeachersTeacheridIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/coming-soon': typeof ComingSoonLazyRoute
  '/metaverse': typeof MetaverseLazyRoute
  '/classes/': typeof ClassesIndexLazyRoute
  '/levels/': typeof LevelsIndexLazyRoute
  '/students/': typeof StudentsIndexLazyRoute
  '/teachers/': typeof TeachersIndexLazyRoute
  '/classes/$class_id/students': typeof ClassesClassidStudentsLazyRoute
  '/classes/$class_id/teachers': typeof ClassesClassidTeachersLazyRoute
  '/classes/$class_id/': typeof ClassesClassidIndexLazyRoute
  '/levels/$planet_name/': typeof LevelsPlanetnameIndexLazyRoute
  '/students/$student_id/': typeof StudentsStudentidIndexLazyRoute
  '/teachers/$teacher_id/': typeof TeachersTeacheridIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/coming-soon'
    | '/metaverse'
    | '/classes'
    | '/levels'
    | '/students'
    | '/teachers'
    | '/classes/$class_id/students'
    | '/classes/$class_id/teachers'
    | '/classes/$class_id'
    | '/levels/$planet_name'
    | '/students/$student_id'
    | '/teachers/$teacher_id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/coming-soon'
    | '/metaverse'
    | '/classes'
    | '/levels'
    | '/students'
    | '/teachers'
    | '/classes/$class_id/students'
    | '/classes/$class_id/teachers'
    | '/classes/$class_id'
    | '/levels/$planet_name'
    | '/students/$student_id'
    | '/teachers/$teacher_id'
  id:
    | '__root__'
    | '/'
    | '/coming-soon'
    | '/metaverse'
    | '/classes/'
    | '/levels/'
    | '/students/'
    | '/teachers/'
    | '/classes/$class_id/students'
    | '/classes/$class_id/teachers'
    | '/classes/$class_id/'
    | '/levels/$planet_name/'
    | '/students/$student_id/'
    | '/teachers/$teacher_id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  ComingSoonLazyRoute: typeof ComingSoonLazyRoute
  MetaverseLazyRoute: typeof MetaverseLazyRoute
  ClassesIndexLazyRoute: typeof ClassesIndexLazyRoute
  LevelsIndexLazyRoute: typeof LevelsIndexLazyRoute
  StudentsIndexLazyRoute: typeof StudentsIndexLazyRoute
  TeachersIndexLazyRoute: typeof TeachersIndexLazyRoute
  ClassesClassidStudentsLazyRoute: typeof ClassesClassidStudentsLazyRoute
  ClassesClassidTeachersLazyRoute: typeof ClassesClassidTeachersLazyRoute
  ClassesClassidIndexLazyRoute: typeof ClassesClassidIndexLazyRoute
  LevelsPlanetnameIndexLazyRoute: typeof LevelsPlanetnameIndexLazyRoute
  StudentsStudentidIndexLazyRoute: typeof StudentsStudentidIndexLazyRoute
  TeachersTeacheridIndexLazyRoute: typeof TeachersTeacheridIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ComingSoonLazyRoute: ComingSoonLazyRoute,
  MetaverseLazyRoute: MetaverseLazyRoute,
  ClassesIndexLazyRoute: ClassesIndexLazyRoute,
  LevelsIndexLazyRoute: LevelsIndexLazyRoute,
  StudentsIndexLazyRoute: StudentsIndexLazyRoute,
  TeachersIndexLazyRoute: TeachersIndexLazyRoute,
  ClassesClassidStudentsLazyRoute: ClassesClassidStudentsLazyRoute,
  ClassesClassidTeachersLazyRoute: ClassesClassidTeachersLazyRoute,
  ClassesClassidIndexLazyRoute: ClassesClassidIndexLazyRoute,
  LevelsPlanetnameIndexLazyRoute: LevelsPlanetnameIndexLazyRoute,
  StudentsStudentidIndexLazyRoute: StudentsStudentidIndexLazyRoute,
  TeachersTeacheridIndexLazyRoute: TeachersTeacheridIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/coming-soon",
        "/metaverse",
        "/classes/",
        "/levels/",
        "/students/",
        "/teachers/",
        "/classes/$class_id/students",
        "/classes/$class_id/teachers",
        "/classes/$class_id/",
        "/levels/$planet_name/",
        "/students/$student_id/",
        "/teachers/$teacher_id/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/coming-soon": {
      "filePath": "coming-soon.lazy.tsx"
    },
    "/metaverse": {
      "filePath": "metaverse.lazy.tsx"
    },
    "/classes/": {
      "filePath": "classes/index.lazy.tsx"
    },
    "/levels/": {
      "filePath": "levels/index.lazy.tsx"
    },
    "/students/": {
      "filePath": "students/index.lazy.tsx"
    },
    "/teachers/": {
      "filePath": "teachers/index.lazy.tsx"
    },
    "/classes/$class_id/students": {
      "filePath": "classes/$class_id/students.lazy.tsx"
    },
    "/classes/$class_id/teachers": {
      "filePath": "classes/$class_id/teachers.lazy.tsx"
    },
    "/classes/$class_id/": {
      "filePath": "classes/$class_id/index.lazy.tsx"
    },
    "/levels/$planet_name/": {
      "filePath": "levels/$planet_name/index.lazy.tsx"
    },
    "/students/$student_id/": {
      "filePath": "students/$student_id/index.lazy.tsx"
    },
    "/teachers/$teacher_id/": {
      "filePath": "teachers/$teacher_id/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
